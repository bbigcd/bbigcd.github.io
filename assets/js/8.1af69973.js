(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{209:function(_,v,t){"use strict";t.r(v);var r=t(0),s=Object(r.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"csharp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csharp"}},[_._v("#")]),_._v(" CSharp")]),_._v(" "),t("p",[_._v("程序设计语言 C#")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/",target:"_blank",rel:"noopener noreferrer"}},[_._v("官方文档"),t("OutboundLink")],1),_._v("是最好学习 C# 的地方，适合基础学习。")]),_._v(" "),t("h3",{attrs:{id:"基本信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本信息"}},[_._v("#")]),_._v(" 基本信息")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("程序结构")]),_._v(" "),t("ul",[t("li",[_._v("关键组织概念："),t("strong",[_._v("程序")]),_._v("、"),t("strong",[_._v("命名空间")]),_._v("、"),t("strong",[_._v("类型")]),_._v("和"),t("strong",[_._v("程序集")]),_._v("。")])])]),_._v(" "),t("li",[t("p",[_._v("类型和变量")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("值类型")]),_._v("、"),t("strong",[_._v("引用类型")]),_._v("和"),t("strong",[_._v("变量")]),_._v("。")])])]),_._v(" "),t("li",[t("p",[_._v("表达式")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("表达式")]),_._v("是在"),t("strong",[_._v("操作数")]),_._v("和"),t("strong",[_._v("运算符")]),_._v("的基础上构造而成。表达式生成的是值。")])])]),_._v(" "),t("li",[t("p",[_._v("语句")]),_._v(" "),t("ul",[t("li",[_._v("语句用于表示程序的操作。")])])]),_._v(" "),t("li",[t("p",[_._v("类和对象")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("类")]),_._v("是最基本的 C# 类型。"),t("strong",[_._v("对象")]),_._v("是类的示例。类是使用成员生成的。")])])]),_._v(" "),t("li",[t("p",[_._v("数组")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("数组")]),_._v("是一种数据结构，其中包含许多通过计算索引访问的变量。")])])]),_._v(" "),t("li",[t("p",[_._v("接口")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("接口")]),_._v("定义了可由类和结构实现的协定。接口可以含方法、属性、事件和索引器。接口不提供所定义成员的实现，仅指定必须由实现接口的类或结构提供的成员。")])])]),_._v(" "),t("li",[t("p",[_._v("委托")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("委托类型")]),_._v("表示对具有特殊参数列表和返回类型的方法的引用。通过委托，可以将方法视为可分配给变量并可作为参数传递的实体。委托类似于其它一些语言中的函数指针概念，但与函数指针不同的是，委托不仅面向对象，还类型安全。")])])]),_._v(" "),t("li",[t("p",[_._v("特性")]),_._v(" "),t("ul",[t("li",[_._v("使用"),t("strong",[_._v("特性")]),_._v("，程序可以指定关于类型、成员和其他实体的附加声明性信息。")])])])])])}),[],!1,null,null,null);v.default=s.exports}}]);